name: HolidayHub Tests

on:
  push:
    branches:
      - main

permissions:
  contents: read
  pages: write
  actions: read
  id-token: write

env:
  API_KEY: ${{ secrets.API_KEY }}
  API_URI: ${{ secrets.API_URI }}
  DB_NAME: ${{ secrets.DB_NAME }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_URI: ${{ secrets.DB_URI }}
  DB_USERNAME: ${{ secrets.DB_USERNAME }}
  DEVELOPER: ${{ secrets.DEVELOPER }}
  DEV_KEY: ${{ secrets.DEV_KEY }}
  DEVELOPMENT_PASSWORD: ${{secrets.DEVELOPMENT_PASSWORD}}
  DOMAIN: ${{ secrets.DOMAIN }}
  EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
  ENCRYPTION_CIPHER_KEY: ${{ secrets.ENCRYPTION_CIPHER_KEY }}
  ENCRYPTION_DEV_KEY: ${{ secrets.ENCRYPTION_DEV_KEY }}
  ENCRYPTION_DICTIONARY: ${{secrets.ENCRYPTION_DICTIONARY}}
  ENCRYPTION_DICT_PATH: ${{ secrets.ENCRYPTION_DICT_PATH }}
  ENCRYPTION_DIRECTORY: ${{ secrets.ENCRYPTION_DIRECTORY }}
  ENCRYPTION_PATH: ${{ secrets.ENCRYPTION_PATH }}
  ENCRYPTION_SCRIPT: ${{ secrets.ENCRYPTION_SCRIPT }}
  ENVIRONMENT: ${{secrets.TESTING_ENVIRONMENT}}
  LOGO_URL: ${{ secrets.LOGO_URL }}
  SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
  TEST_DB_NAME: ${{ secrets.TEST_DB_NAME }}
  TEST_DB_URI: ${{ secrets.TEST_DB_URI }}
  TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
  VALID_ENCRYPTION_KEYS: ${{ secrets.VALID_ENCRYPTION_KEYS }}
  VALID_ENCRYPTION_KEYS_PATH: ${{ secrets.VALID_ENCRYPTION_KEYS_PATH }}

jobs:
  testing:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ secrets.DB_NAME }}
          POSTGRES_USER: ${{ secrets.DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3'

      - name: Install dependencies
        run: pip3 install -r requirements.txt

      - name: Create and initialize log files
        run: |
          touch errors/error_log.json && echo "[]" > errors/error_log.json
          touch jobs/jobs_log.json && echo "[]" > jobs/jobs_log.json
          
      - name: Create and populate encryption files
        run: |
          mkdir $ENCRYPTION_DIRECTORY
          touch $VALID_ENCRYPTION_KEYS_PATH && echo $VALID_ENCRYPTION_KEYS > $VALID_ENCRYPTION_KEYS_PATH
          touch $ENCRYPTION_DICT_PATH && echo "[$ENCRYPTION_DICTIONARY]" > $ENCRYPTION_DICT_PATH
          touch $ENCRYPTION_PATH && echo -e "$ENCRYPTION_SCRIPT" > $ENCRYPTION_PATH

      - name: Start Postgres service
        run: |
          until pg_isready -h localhost -p 5432; do
            echo "Waiting for PostgreSQL to start..."
            sleep 1
          done

      - name: Create/seed database & Create test database
        env:
          PGPASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          dropdb --if-exists -h localhost -U $DB_USERNAME $TEST_DB_NAME
          createdb -h localhost -U $DB_USERNAME $TEST_DB_NAME
          python3 tests/test_db_config.py
      
      - name: Run unit tests
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: pytest -v tests/unit_tests/
          
      - name: Run integration tests
        env: 
          PYTHONPATH: ${{ github.workspace }}
        run: pytest -v tests/integration_tests/